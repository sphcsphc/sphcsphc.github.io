[
	{
		"subject": "논리회로",
		"num": 1,
		"problem": "비가중치(non-weighted) 코드인 것은?",
		"ProHasImg": "False",
		"1": "8421 코드",
		"2": "biquinary 코드",
		"3": "2-out-of-5 코드",
		"4": "2421 코드",
		"answer": 3,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-1.png"
	},
	{
		"subject": "논리회로",
		"num": 2,
		"problem": "BCD 코드(code)란?",
		"ProHasImg": "False",
		"1": "8421 코드",
		"2": "biquinary 코드",
		"3": "2-out-of-5 코드",
		"4": "2421 코드",
		"answer": 1,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-2.png"
	},
	{
		"subject": "논리회로",
		"num": 3,
		"problem": "10진수 24를 BCD 코드로 나타내면?",
		"ProHasImg": "False",
		"1": "01010111",
		"2": "00011000",
		"3": "01100100",
		"4": "00100100",
		"answer": 4,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-3.png"
	},
	{
		"subject": "논리회로",
		"num": 4,
		"problem": "BCD코드 0110 1001 1000을 10진수로 변환한 것으로 옳은 것은?",
		"ProHasImg": "False",
		"1": "698",
		"2": "696",
		"3": "968",
		"4": "618",
		"answer": 1,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-4.png"
	},
	{
		"subject": "논리회로",
		"num": 5,
		"problem": "3초과 코드의 설명으로 틀린 것은?",
		"ProHasImg": "False",
		"1": "가중치 코드이다.",
		"2": "BCD 코드에 3을 더한 것과 같다.",
		"3": "10진수를 표현하기 위한 코드이다.",
		"4": "코드를 구성하는 어떤 비트 값도 0이 아니다.",
		"answer": 1,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-5.png"
	},
	{
		"subject": "논리회로",
		"num": 6,
		"problem": "10진수 9를 excess-3 코드로 변환하면?",
		"ProHasImg": "False",
		"1": "1001",
		"2": "1110",
		"3": "1101",
		"4": "1100",
		"answer": 4,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-6.png"
	},
	{
		"subject": "논리회로",
		"num": 7,
		"problem": "3초과 코드 1100 0110을 10진수로 나타내면?",
		"ProHasImg": "False",
		"1": "306",
		"2": "201",
		"3": "198",
		"4": "93",
		"answer": 4,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-7.png"
	},
	{
		"subject": "논리회로",
		"num": 8,
		"problem": "그레이 코드에 대한 설명으로 틀린 것은?",
		"ProHasImg": "False",
		"1": "자기 보수의 특성을 가지고 있다.",
		"2": "가중치를 갖지 않는 코드이다.",
		"3": "코드 변환을 위해 XOR게이트를 사용한다.",
		"4": "아날로그/디지털 변환기를 제어하는 코드에 사용된다.",
		"answer": 1,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-8.png"
	},
	{
		"subject": "논리회로",
		"num": 9,
		"problem": "그레이 코드의 특성과 거리가 먼 것은?",
		"ProHasImg": "False",
		"1": "데이터 전송",
		"2": "입출력장치",
		"3": "사칙연산",
		"4": "A/D converter",
		"answer": 3,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-9.png"
	},
	{
		"subject": "논리회로",
		"num": 10,
		"problem": "2진수를 그레이코드로 변환하는 회로에 들어가는 논리회로 게이트 명칭은?",
		"ProHasImg": "False",
		"1": "NOR 게이트",
		"2": "OR 게이트",
		"3": "NAND 게이트",
		"4": "XOR 게이트",
		"answer": 4,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-10.png"
	},
	{
		"subject": "논리회로",
		"num": 11,
		"problem": "2진수 10110을 그레이 코드로 변환한 것은?",
		"ProHasImg": "False",
		"1": "11101",
		"2": "10110",
		"3": "01010",
		"4": "01001",
		"answer": 1,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-11.png"
	},
	{
		"subject": "논리회로",
		"num": 12,
		"problem": "그레이 코드 1110을 2진 코드로 변환하면?",
		"ProHasImg": "False",
		"1": "1011",
		"2": "1010",
		"3": "1101",
		"4": "1100",
		"answer": 1,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-12.png"
	},
	{
		"subject": "논리회로",
		"num": 13,
		"problem": "패리티 검사를 하는 이유로 적합한 것은?",
		"ProHasImg": "False",
		"1": "전송된 부호의 오류 검출",
		"2": "기억 장치의 여유도 검사",
		"3": "전송된 부호의 속도 증가",
		"4": "중계 전송로의 여유도 검사",
		"answer": 1,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-13.png"
	},
	{
		"subject": "논리회로",
		"num": 14,
		"problem": "parity bit의 기능으로 옳은 것은?",
		"ProHasImg": "False",
		"1": "error 검출용 비트이다.",
		"2": "bit 위치에 따라 가중치 값을 갖는다.",
		"3": "BCD 코드에서만 사용한다.",
		"4": "error bit 이다.",
		"answer": 1,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-14.png"
	},
	{
		"subject": "논리회로",
		"num": 15,
		"problem": "홀수 패리티에 대한 설명 중 틀린 것은?",
		"ProHasImg": "False",
		"1": "1의 비트수가 짝수이면 패리티 비트를 1로 만든다.",
		"2": "1의 비트수가 짝수이면 패리티 비트를 0으로 만든다.",
		"3": "데이터 전송에 사용하며 구현이 간단하다.",
		"4": "동시에 두 개의 비트가 변하면 검출을 하지 못한다.",
		"answer": 2,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-15.png"
	},
	{
		"subject": "논리회로",
		"num": 16,
		"problem": "8비트 데이터에 홀수 패리티 비트를 첨가할 때 틀린 것은?",
		"ProHasImg": "False",
		"1": "111110000",
		"2": "110011000",
		"3": "101001110",
		"4": "100100010",
		"answer": 2,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-16.png"
	},
	{
		"subject": "논리회로",
		"num": 17,
		"problem": "컴퓨터에서 세계 각국의 언어를 통일된 방법으로 표현 할 수 있게 제안된 국제적인 코드는?",
		"ProHasImg": "False",
		"1": "BCD 코드",
		"2": "ASCII 코드",
		"3": "UNICODE",
		"4": "gray 코드",
		"answer": 4,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-17.png"
	},
	{
		"subject": "논리회로",
		"num": 18,
		"problem": "오류검출코드에 대한 설명으로 틀린 것은?",
		"ProHasImg": "False",
		"1": "biquinary 코드는 5비트 중 1이/n2개 있다.",
		"2": "2-out-of-5 코드는 코드의 각 그룹 중 1의 개수가 2개 있다.",
		"3": "링 카운터 코드는 10개의 비트로 구성되어 있으며, 모든 코드는 하나의 비트에 반드시 1을 가진다",
		"4": "Hamming 코드는 오류검출 및 교정이 가능하다.",
		"answer": 1,
		"solution": "https://sphcsphc.github.io/logic_circuit/ch03/solution/3-18.png"
	}
]